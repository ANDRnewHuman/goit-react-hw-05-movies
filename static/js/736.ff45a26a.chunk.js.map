{"version":3,"file":"static/js/736.ff45a26a.chunk.js","mappings":"+SAMMA,EAAc,IAAIC,EAAAA,GAET,SAASC,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAgCjB,OA9BAC,EAAAA,EAAAA,YAAU,WACHJ,IAGLH,GAAa,GAEb,mCAAC,iHAE6BP,EAAYe,gBAAgBL,GAFzD,gBAEWM,EAFX,EAEWA,QACFC,EAAOD,EAAQE,KAAI,kBAA8B,CACrDR,GADuB,EAAGA,GAE1BS,OAFuB,EAAOA,OAG9BC,QAHuB,EAAeA,QAAf,IAMzBf,EAAeY,GATlB,gDAWGR,GAAS,GAXZ,yBAaGF,GAAa,GAbhB,4EAAD,uDAgBD,GAAE,CAACG,KAEJI,EAAAA,EAAAA,YAAU,WACJN,GACFI,EAAS,IAEZ,GAAE,CAACJ,EAAOI,KAGT,8BACGN,GACC,SAAC,MAAD,UAAce,EAAAA,MAEd,wBACGjB,EAAYc,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,UAACE,EAAD,YACE,uBAAIH,GAAkB,WACtB,uBAAIC,GAAoB,oBAFZV,EADC,OAU1B,CAED,IAAMY,EAAUC,EAAAA,GAAAA,GAAH,+O","sources":["pages/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport { MovieDB_API, spinStyles } from 'services';\n\nconst movieDB_API = new MovieDB_API();\n\nexport default function Reviews() {\n  const [reviewsList, setReviewsList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    setIsLoading(true);\n\n    (async function getData() {\n      try {\n        const { results } = await movieDB_API.getMovieReviews(id);\n        const data = results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n\n        setReviewsList(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [id]);\n\n  useEffect(() => {\n    if (error) {\n      navigate('*');\n    }\n  }, [error, navigate]);\n\n  return (\n    <>\n      {isLoading ? (\n        <TailSpin {...spinStyles} />\n      ) : (\n        <ul>\n          {reviewsList.map(({ id, author, content }) => (\n            <Wrapper key={id}>\n              <p>{author ? author : 'Guest'}</p>\n              <p>{content ? content : 'No review yet'}</p>\n            </Wrapper>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nconst Wrapper = styled.li`\n  margin-bottom: 40px;\n  padding: 40px;\n  font-size: 20px;\n  background-color: #292d33;\n  color: white;\n  text-align: justify;\n  border-radius: 15px;\n\n  & p:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n"],"names":["movieDB_API","MovieDB_API","Reviews","useState","reviewsList","setReviewsList","isLoading","setIsLoading","error","setError","id","useParams","navigate","useNavigate","useEffect","getMovieReviews","results","data","map","author","content","spinStyles","Wrapper","styled"],"sourceRoot":""}